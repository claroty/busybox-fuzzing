--- ./networking/nslookup.c	2021-10-06 19:17:16.172042354 +0300
+++ ./networking/nslookup.c.patched	2021-10-06 19:17:55.629704575 +0300
@@ -851,191 +851,15 @@
 int nslookup_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int nslookup_main(int argc UNUSED_PARAM, char **argv)
 {
-	unsigned types;
-	int rc;
-	int err;
-
-	INIT_G();
-
-	/* manpage: "Options can also be specified on the command line
-	 * if they precede the arguments and are prefixed with a hyphen."
-	 */
-	types = 0;
-	argv++;
-	for (;;) {
-		const char *options =
-// bind-utils-9.11.3 accept these:
-// class=   cl=
-// type=    ty= querytype= query= qu= q=
-// domain=  do=
-// port=    po=
-// timeout= t=
-// retry=   ret=
-// ndots=
-// recurse
-// norecurse
-// defname
-// nodefname
-// vc
-// novc
-// debug
-// nodebug
-// d2
-// nod2
-// search
-// nosearch
-// sil
-// fail
-// nofail
-// ver (prints version and exits)
-			"type\0"      /* 0 */
-			"querytype\0" /* 1 */
-			"port\0"      /* 2 */
-			"retry\0"     /* 3 */
-			"debug\0"     /* 4 */
-			"t\0" /* disambiguate with "type": else -t=2 fails */
-			"timeout\0"   /* 6 */
-			"";
-		int i;
-		char *arg;
-		char *val;
-
-		if (!*argv)
-			bb_show_usage();
-		if (argv[0][0] != '-')
-			break;
-
-		/* Separate out "=val" part */
-		arg = (*argv++) + 1;
-		val = strchrnul(arg, '=');
-		if (*val)
-			*val++ = '\0';
-
-		i = index_in_substrings(options, arg);
-		//bb_error_msg("i:%d arg:'%s' val:'%s'", i, arg, val);
-		if (i < 0)
-			bb_show_usage();
-
-		if (i <= 1) {
-			for (i = 0;; i++) {
-				if (i == ARRAY_SIZE(qtypes))
-					bb_error_msg_and_die("invalid query type \"%s\"", val);
-				if (strcasecmp(qtypes[i].name, val) == 0)
-					break;
-			}
-			types |= (1 << i);
-			continue;
-		}
-		if (i == 2) {
-			G.default_port = xatou_range(val, 1, 0xffff);
-		}
-		if (i == 3) {
-			G.default_retry = xatou_range(val, 1, INT_MAX);
-		}
-		if (i == 4) {
-			option_mask32 |= OPT_debug;
-		}
-		if (i > 4) {
-			G.default_timeout = xatou_range(val, 1, INT_MAX / 1000);
-		}
+	int res;
+	unsigned char reply[512];
+	int recvlen;
+	while (__AFL_LOOP(1000)) {
+		recvlen = read(STDIN_FILENO, reply, 512);
+		res = parse_reply(reply, recvlen);
 	}
-
-	/* Use given DNS server if present */
-	if (argv[1]) {
-		if (argv[2])
-			bb_show_usage();
-		add_ns(argv[1]);
-	} else {
-		parse_resolvconf();
-		/* Fall back to localhost if we could not find NS in resolv.conf */
-		if (G.serv_count == 0)
-			add_ns("127.0.0.1");
-	}
-
-	if (types == 0) {
-		/* No explicit type given, guess query type.
-		 * If we can convert the domain argument into a ptr (means that
-		 * inet_pton() could read it) we assume a PTR request, else
-		 * we issue A+AAAA queries and switch to an output format
-		 * mimicking the one of the traditional nslookup applet.
-		 */
-		char *ptr;
-
-		ptr = make_ptr(argv[0]);
-		if (ptr) {
-			add_query(T_PTR, ptr);
-		} else {
-			add_query_with_search(T_A, argv[0]);
-#if ENABLE_FEATURE_IPV6
-			add_query_with_search(T_AAAA, argv[0]);
-#endif
-		}
-	} else {
-		int c;
-		for (c = 0; c < ARRAY_SIZE(qtypes); c++) {
-			if (types & (1 << c))
-				add_query_with_search(qtypes[c].type, argv[0]);
-		}
-	}
-
-	for (rc = 0; rc < G.serv_count;) {
-		int c;
-
-		c = send_queries(&G.server[rc]);
-		if (c > 0) {
-			/* more than zero replies received */
-#if 0 /* which version does this? */
-			if (option_mask32 & OPT_debug) {
-				printf("Replies:\t%d\n", G.server[rc].replies);
-				printf("Failures:\t%d\n\n", G.server[rc].failures);
-			}
-#endif
-			break;
-//FIXME: we "break" even though some queries may still be not answered, and other servers may know them?
-		}
-		/* c = 0: timed out waiting for replies */
-		/* c < 0: error (message already printed) */
-		rc++;
-		if (rc >= G.serv_count) {
-//
-// NB: bind-utils-9.11.3 behavior (all to stdout, not stderr):
-//
-// $ nslookup gmail.com 8.8.8.8
-// ;; connection timed out; no servers could be reached
-//
-// Using TCP mode:
-// $ nslookup -vc gmail.com 8.8.8.8; echo EXITCODE:$?
-//     <~10 sec>
-// ;; Connection to 8.8.8.8#53(8.8.8.8) for gmail.com failed: timed out.
-//     <~10 sec>
-// ;; Connection to 8.8.8.8#53(8.8.8.8) for gmail.com failed: timed out.
-//     <~10 sec>
-// ;; connection timed out; no servers could be reached
-// ;; Connection to 8.8.8.8#53(8.8.8.8) for gmail.com failed: timed out.
-//     <empty line>
-// EXITCODE:1
-// $ _
-			printf(";; connection timed out; no servers could be reached\n\n");
-			return EXIT_FAILURE;
-		}
-	}
-
-	err = 0;
-	for (rc = 0; rc < G.query_count; rc++) {
-		if (G.query[rc].qlen) {
-			printf("*** Can't find %s: No answer\n", G.query[rc].name);
-			err = 1;
-		}
-	}
-	if (err) /* should this affect exicode too? */
-		bb_putchar('\n');
-
-	if (ENABLE_FEATURE_CLEAN_UP) {
-		free(G.server);
-		free(G.query);
-	}
-
-	return G.exitcode;
+	exit(0);
+	
 }
 
 #endif
